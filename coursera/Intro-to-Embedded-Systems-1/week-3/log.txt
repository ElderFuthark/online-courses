******************************************
*         
*		Description
*
* This is a log file that contians
* information from the .asm, .map and
* linker file. Furthermore, output from
* various GNU Binutils are included.
*
******************************************



/******************************************
*         
*         linker file
*
******************************************/

MEMORY
{
    MAIN_FLASH (RX) : ORIGIN = 0x00000000, LENGTH = 0x00040000
    INFO_FLASH (RX) : ORIGIN = 0x00200000, LENGTH = 0x00004000
    SRAM_CODE  (RWX): ORIGIN = 0x01000000, LENGTH = 0x00010000
    SRAM_DATA  (RW) : ORIGIN = 0x20000000, LENGTH = 0x00010000
}

REGION_ALIAS("REGION_TEXT", MAIN_FLASH);
REGION_ALIAS("REGION_INFO", INFO_FLASH);
REGION_ALIAS("REGION_BSS", SRAM_DATA);
REGION_ALIAS("REGION_DATA", SRAM_DATA);
REGION_ALIAS("REGION_STACK", SRAM_DATA);
REGION_ALIAS("REGION_HEAP", SRAM_DATA);
REGION_ALIAS("REGION_ARM_EXIDX", MAIN_FLASH);
REGION_ALIAS("REGION_ARM_EXTAB", MAIN_FLASH);




/******************************************
*         
*         main.map file
*
******************************************/

Allocating common symbols
Common symbol       size              file

errno               0x4               /usr/lib/gcc/arm-none-eabi/9.1.0/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libg.a(lib_a-reent.o)

*** Memory Configuration ***

Name             Origin             Length             Attributes
MAIN_FLASH       0x0000000000000000 0x0000000000040000 xr  
INFO_FLASH       0x0000000000200000 0x0000000000004000 xr
SRAM_CODE        0x0000000001000000 0x0000000000010000 xrw 
SRAM_DATA        0x0000000020000000 0x0000000000010000 rw
*default*        0x0000000000000000 0xffffffffffffffff


**** Linker ****

 .rodata        0x0000000000000d04        0x4 main.o
                0x0000000000000d04                g2
 .data          0x0000000020000000        0x1 main.o
                0x0000000020000000                g3
 *fill*         0x0000000020000001        0x3
 .data          0x0000000020000004       0x28 misc.o
                0x0000000020000004                g5

.bss            0x0000000020000870       0x64
                0x0000000020000870                __bss_start__ = .
 *(.shbss)
 *(.bss)
                0x0000000020000874                g4 

                0x00000000200008d0                errno
                0x00000000200008d4                . = ALIGN (0x4)
                0x00000000200008d4                __bss_end__ = .

.heap           0x00000000200008d4        0x0
                0x00000000200008d4                __heap_start__ = .
                0x00000000200008d4                end = __heap_start__
                0x00000000200008d4                _end = end
                0x00000000200008d4                __end = end
 *(.heap)
                0x00000000200008d4                __heap_end__ = .
                0x00000000200008d4                __HeapLimit = __heap_end__

.stack          0x00000000200008d8        0x0
                0x00000000200008d8                _stack = .
                0x00000000200008d8                __stack = .
 *(.stack)
OUTPUT(main.out elf32-littlearm)




/******************************************
*         
*         arm-none-eabi-nm main.out
*
******************************************/

00000d1c r										read only data section 
00000174 T atexit									inside text (code) section
00202000 A _bsl_base_address							absolute and not changed by further linking	
200008d4 B __bss_end__								bss data section
20000870 B __bss_start__								bss data section
000008f4 T __call_exitprocs							inside text (code) section
00000c1c T cleanup_glue								inside text (code) section
2000087c b completed.10251							bss data section
20000870 D __data_end__								located in initialized data section
00000d28 A __data_load__								absolute and not changed by further linking
20000000 D __data_start__							located in initialized data section
00000134 t __do_global_dtors_aux						inside text (code) section
00000cf8 t __do_global_dtors_aux_fini_array_entry			inside text (code) section
2000002c D __dso_handle								located in initialized data section
200008d4 N __end									debugging symbol
200008d4 N _end									debugging symbol
200008d4 N end										debugging symbol
200008d0 B errno									bss data section
00000d28 R __etext									read only data section
00000d28 R __exidx_end								read only data section
00000d20 R __exidx_start								read only data section
00000cdc T _exit									inside text (code) section
00000180 T exit									inside text (code) section
20000878 b f2.5337									bss data section
00000cf4 T _fini									inside text (code) section
00000158 t frame_dummy								inside text (code) section
00000ce0 t __frame_dummy_init_array_entry				inside text (code) section
00000d1c r __FRAME_END__								read only data section
0000022c T free									inside text (code) section
00000a30 T _free_r									inside text (code) section
000000c0 T func									inside text (code) section
20000870 b g1										bss data section
00000d04 R g2										read only data section
20000000 D g3										located in initialized data section
20000874 B g4										bss data section
20000004 D g5										located in initialized data section
00000d18 R _global_impure_ptr							read only data section
200008d4 N __heap_end__								debugging symbol
200008cc b heap_end.5501								bss data section
200008d4 N __HeapLimit								debugging symbol
200008d4 N __heap_start__							debugging symbol
20000038 d impure_data								located in initialized data section
20000030 D _impure_ptr								located in initialized data section
00000ce8 T _init									inside text (code) section
00000ce8 T __init_array_end							inside text (code) section
00000ce0 T __init_array_start							inside text (code) section
00000000 A _intvecs_base_address						absolute and not changed by further linking
000001a0 T __libc_fini_array							inside text (code) section
000001d4 T __libc_init_array							inside text (code) section
00200000 A _mailbox_base_address						absolute and not changed by further linking
00000068 T main									inside text (code) section
00000000 T _mainCRTStartup							inside text (code) section
0000021c T malloc									inside text (code) section
20000460 D __malloc_av_								located in initialized data section
20000898 B __malloc_current_mallinfo					bss data section
0000084c T __malloc_lock								inside text (code) section
200008c0 B __malloc_max_sbrked_mem						bss data section
200008c4 B __malloc_max_total_mem						bss data section
0000023c T _malloc_r								inside text (code) section
20000868 D __malloc_sbrk_base							located in initialized data section
200008c8 B __malloc_top_pad							bss data section
00000990 T _malloc_trim_r							inside text (code) section
2000086c D __malloc_trim_threshold						located in initialized data section
00000850 T __malloc_unlock							inside text (code) section
000007ac T memset									inside text (code) section
20000880 b object.10256								bss data section
00000c38 T _reclaim_reent							inside text (code) section
00000878 T __register_exitproc						inside text (code) section
000008e0 t register_fini								inside text (code) section
00000cc0 T _sbrk									inside text (code) section
00000854 T _sbrk_r									inside text (code) section
200008d8 N __stack									debugging symbol
200008d8 N _stack									debugging symbol
00000000 T _start									inside text (code) section
00201000 A _tlv_base_address							absolute and not changed by further linking
20000000 A _vtable_base_address						absolute and not changed by further linking




/******************************************
*         
*         main.asm
*
******************************************/

g1:
	.space	4
	.size	g1, 4
	.global	g2
	.section	.rodata
	.align	2
	.type	g2, %object
	.size	g2, 4
g2:
	.word	45
	.global	g3
	.data
	.type	g3, %object
	.size	g3, 1
g3:
	.byte	12
	.global	g4
	.bss
	.type	g4, %object
	.size	g4, 1
g4:
	.space	1
	.text
	.align	1
	.global	main
	.arch armv7e-m
	.syntax unified
	.thumb
	.thumb_func
	.fpu fpv4-sp-d16
	.type	main, %function



/******************************************
*         
*         misc.asm
*
******************************************/

.Ltext0:
	.cfi_sections	.debug_frame
	.global	g5
	.data
	.align	2
	.type	g5, %object
	.size	g5, 40
g5:
	.word	0
	.word	1
	.word	2
	.word	3
	.word	4
	.word	5
	.word	6
	.word	7
	.word	8
	.word	9
	.section	.rodata
	.align	2
.LC0:
	.ascii	"Hello World!\012\000"
	.text
	.align	1
	.global	func
	.arch armv7e-m
	.syntax unified
	.thumb
	.thumb_func
	.fpu fpv4-sp-d16
	.type	func, %function
